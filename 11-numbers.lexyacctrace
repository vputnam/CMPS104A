Starting parse
Entering state 0
Reducing stack by rule 7 (line 63):
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --(end of buffer or a NUL)
--accepting rule at line 41 ("# 1 "11-numbers.oc"")
--accepting rule at line 43 ("
")
--accepting rule at line 41 ("# 1 "<built-in>"")
--accepting rule at line 43 ("
")
--accepting rule at line 41 ("# 1 "<command-line>"")
--accepting rule at line 43 ("
")
--accepting rule at line 41 ("# 1 "/usr/include/stdc-predef.h" 1 3 4")
--accepting rule at line 43 ("
")
--accepting rule at line 41 ("# 1 "<command-line>" 2")
--accepting rule at line 43 ("
")
--accepting rule at line 41 ("# 1 "11-numbers.oc"")
--accepting rule at line 43 ("
")
--accepting rule at line 43 ("
")
--accepting rule at line 43 ("
")
--accepting rule at line 41 ("# 1 "oclib.oh" 1")
--accepting rule at line 43 ("
")
--accepting rule at line 41 ("# 23 "oclib.oh"")
--accepting rule at line 43 ("
")
--accepting rule at line 46 ("void")
Next token is token TOK_VOID ()
Shifting token TOK_VOID ()
Entering state 5
Reducing stack by rule 13 (line 81):
   $1 = token TOK_VOID ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 31
Reading a token: --accepting rule at line 42 (" ")
--accepting rule at line 65 ("__assert_fail")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 74
Reducing stack by rule 25 (line 104):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 33
Reading a token: --accepting rule at line 42 (" ")
--accepting rule at line 73 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 76
Reading a token: --accepting rule at line 50 ("string")
Next token is token TOK_STRING ()
Shifting token TOK_STRING ()
Entering state 9
Reducing stack by rule 17 (line 85):
   $1 = token TOK_STRING ()
-> $$ = nterm basetype ()
Stack now 0 2 33 76
Entering state 31
Reading a token: --accepting rule at line 42 (" ")
--accepting rule at line 65 ("expr")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 74
Reducing stack by rule 25 (line 104):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2 33 76
Entering state 111
Reducing stack by rule 22 (line 98):
   $1 = token '(' ()
   $2 = nterm identdecl ()
-> $$ = nterm function_helper ()
Stack now 0 2 33
Entering state 77
Reading a token: --accepting rule at line 80 (",")
Next token is token ',' ()
Shifting token ',' ()
Entering state 113
Reading a token: --accepting rule at line 42 (" ")
--accepting rule at line 50 ("string")
Next token is token TOK_STRING ()
Shifting token TOK_STRING ()
Entering state 9
Reducing stack by rule 17 (line 85):
   $1 = token TOK_STRING ()
-> $$ = nterm basetype ()
Stack now 0 2 33 77 113
Entering state 31
Reading a token: --accepting rule at line 42 (" ")
--accepting rule at line 65 ("file")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 74
Reducing stack by rule 25 (line 104):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2 33 77 113
Entering state 139
Reducing stack by rule 21 (line 96):
   $1 = nterm function_helper ()
   $2 = token ',' ()
   $3 = nterm identdecl ()
-> $$ = nterm function_helper ()
Stack now 0 2 33
Entering state 77
Reading a token: --accepting rule at line 80 (",")
Next token is token ',' ()
Shifting token ',' ()
Entering state 113
Reading a token: --accepting rule at line 42 (" ")
--accepting rule at line 49 ("int")
Next token is token TOK_INT ()
Shifting token TOK_INT ()
Entering state 8
Reducing stack by rule 16 (line 84):
   $1 = token TOK_INT ()
-> $$ = nterm basetype ()
Stack now 0 2 33 77 113
Entering state 31
Reading a token: --accepting rule at line 42 (" ")
--accepting rule at line 65 ("line")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 74
Reducing stack by rule 25 (line 104):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2 33 77 113
Entering state 139
Reducing stack by rule 21 (line 96):
   $1 = nterm function_helper ()
   $2 = token ',' ()
   $3 = nterm identdecl ()
-> $$ = nterm function_helper ()
Stack now 0 2 33
Entering state 77
Reading a token: --accepting rule at line 74 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 112
Reading a token: --accepting rule at line 75 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 137
Reducing stack by rule 20 (line 91):
   $1 = nterm identdecl ()
   $2 = nterm function_helper ()
   $3 = token ')' ()
   $4 = token ';' ()
-> $$ = nterm function ()
Stack now 0 2
Entering state 32
Reducing stack by rule 3 (line 59):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 43 ("
")
--accepting rule at line 46 ("void")
Next token is token TOK_VOID ()
Shifting token TOK_VOID ()
Entering state 5
Reducing stack by rule 13 (line 81):
   $1 = token TOK_VOID ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 31
Reading a token: --accepting rule at line 42 (" ")
--accepting rule at line 65 ("putb")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 74
Reducing stack by rule 25 (line 104):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 33
Reading a token: --accepting rule at line 42 (" ")
--accepting rule at line 73 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 76
Reading a token: --accepting rule at line 47 ("bool")
Next token is token TOK_BOOL ()
Shifting token TOK_BOOL ()
Entering state 6
Reducing stack by rule 14 (line 82):
   $1 = token TOK_BOOL ()
-> $$ = nterm basetype ()
Stack now 0 2 33 76
Entering state 31
Reading a token: --accepting rule at line 42 (" ")
--accepting rule at line 65 ("b")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 74
Reducing stack by rule 25 (line 104):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2 33 76
Entering state 111
Reducing stack by rule 22 (line 98):
   $1 = token '(' ()
   $2 = nterm identdecl ()
-> $$ = nterm function_helper ()
Stack now 0 2 33
Entering state 77
Reading a token: --accepting rule at line 74 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 112
Reading a token: --accepting rule at line 75 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 137
Reducing stack by rule 20 (line 91):
   $1 = nterm identdecl ()
   $2 = nterm function_helper ()
   $3 = token ')' ()
   $4 = token ';' ()
-> $$ = nterm function ()
Stack now 0 2
Entering state 32
Reducing stack by rule 3 (line 59):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 43 ("
")
--accepting rule at line 46 ("void")
Next token is token TOK_VOID ()
Shifting token TOK_VOID ()
Entering state 5
Reducing stack by rule 13 (line 81):
   $1 = token TOK_VOID ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 31
Reading a token: --accepting rule at line 42 (" ")
--accepting rule at line 65 ("putc")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 74
Reducing stack by rule 25 (line 104):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 33
Reading a token: --accepting rule at line 42 (" ")
--accepting rule at line 73 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 76
Reading a token: --accepting rule at line 48 ("char")
Next token is token TOK_CHAR ()
Shifting token TOK_CHAR ()
Entering state 7
Reducing stack by rule 15 (line 83):
   $1 = token TOK_CHAR ()
-> $$ = nterm basetype ()
Stack now 0 2 33 76
Entering state 31
Reading a token: --accepting rule at line 42 (" ")
--accepting rule at line 65 ("c")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 74
Reducing stack by rule 25 (line 104):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2 33 76
Entering state 111
Reducing stack by rule 22 (line 98):
   $1 = token '(' ()
   $2 = nterm identdecl ()
-> $$ = nterm function_helper ()
Stack now 0 2 33
Entering state 77
Reading a token: --accepting rule at line 74 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 112
Reading a token: --accepting rule at line 75 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 137
Reducing stack by rule 20 (line 91):
   $1 = nterm identdecl ()
   $2 = nterm function_helper ()
   $3 = token ')' ()
   $4 = token ';' ()
-> $$ = nterm function ()
Stack now 0 2
Entering state 32
Reducing stack by rule 3 (line 59):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 43 ("
")
--accepting rule at line 46 ("void")
Next token is token TOK_VOID ()
Shifting token TOK_VOID ()
Entering state 5
Reducing stack by rule 13 (line 81):
   $1 = token TOK_VOID ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 31
Reading a token: --accepting rule at line 42 (" ")
--accepting rule at line 65 ("puti")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 74
Reducing stack by rule 25 (line 104):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 33
Reading a token: --accepting rule at line 42 (" ")
--accepting rule at line 73 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 76
Reading a token: --accepting rule at line 49 ("int")
Next token is token TOK_INT ()
Shifting token TOK_INT ()
Entering state 8
Reducing stack by rule 16 (line 84):
   $1 = token TOK_INT ()
-> $$ = nterm basetype ()
Stack now 0 2 33 76
Entering state 31
Reading a token: --accepting rule at line 42 (" ")
--accepting rule at line 65 ("i")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 74
Reducing stack by rule 25 (line 104):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2 33 76
Entering state 111
Reducing stack by rule 22 (line 98):
   $1 = token '(' ()
   $2 = nterm identdecl ()
-> $$ = nterm function_helper ()
Stack now 0 2 33
Entering state 77
Reading a token: --accepting rule at line 74 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 112
Reading a token: --accepting rule at line 75 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 137
Reducing stack by rule 20 (line 91):
   $1 = nterm identdecl ()
   $2 = nterm function_helper ()
   $3 = token ')' ()
   $4 = token ';' ()
-> $$ = nterm function ()
Stack now 0 2
Entering state 32
Reducing stack by rule 3 (line 59):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 43 ("
")
--accepting rule at line 46 ("void")
Next token is token TOK_VOID ()
Shifting token TOK_VOID ()
Entering state 5
Reducing stack by rule 13 (line 81):
   $1 = token TOK_VOID ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 31
Reading a token: --accepting rule at line 42 (" ")
--accepting rule at line 65 ("puts")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 74
Reducing stack by rule 25 (line 104):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 33
Reading a token: --accepting rule at line 42 (" ")
--accepting rule at line 73 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 76
Reading a token: --accepting rule at line 50 ("string")
Next token is token TOK_STRING ()
Shifting token TOK_STRING ()
Entering state 9
Reducing stack by rule 17 (line 85):
   $1 = token TOK_STRING ()
-> $$ = nterm basetype ()
Stack now 0 2 33 76
Entering state 31
Reading a token: --accepting rule at line 42 (" ")
--accepting rule at line 65 ("s")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 74
Reducing stack by rule 25 (line 104):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2 33 76
Entering state 111
Reducing stack by rule 22 (line 98):
   $1 = token '(' ()
   $2 = nterm identdecl ()
-> $$ = nterm function_helper ()
Stack now 0 2 33
Entering state 77
Reading a token: --accepting rule at line 74 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 112
Reading a token: --accepting rule at line 75 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 137
Reducing stack by rule 20 (line 91):
   $1 = nterm identdecl ()
   $2 = nterm function_helper ()
   $3 = token ')' ()
   $4 = token ';' ()
-> $$ = nterm function ()
Stack now 0 2
Entering state 32
Reducing stack by rule 3 (line 59):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 43 ("
")
--accepting rule at line 46 ("void")
Next token is token TOK_VOID ()
Shifting token TOK_VOID ()
Entering state 5
Reducing stack by rule 13 (line 81):
   $1 = token TOK_VOID ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 31
Reading a token: --accepting rule at line 42 (" ")
--accepting rule at line 65 ("endl")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 74
Reducing stack by rule 25 (line 104):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 33
Reading a token: --accepting rule at line 42 (" ")
--accepting rule at line 73 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 76
Reading a token: --accepting rule at line 74 (")")
Next token is token ')' ()
Reducing stack by rule 23 (line 100):
   $1 = token '(' ()
-> $$ = nterm function_helper ()
Stack now 0 2 33
Entering state 77
Next token is token ')' ()
Shifting token ')' ()
Entering state 112
Reading a token: --accepting rule at line 75 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 137
Reducing stack by rule 20 (line 91):
   $1 = nterm identdecl ()
   $2 = nterm function_helper ()
   $3 = token ')' ()
   $4 = token ';' ()
-> $$ = nterm function ()
Stack now 0 2
Entering state 32
Reducing stack by rule 3 (line 59):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 43 ("
")
--accepting rule at line 49 ("int")
Next token is token TOK_INT ()
Shifting token TOK_INT ()
Entering state 8
Reducing stack by rule 16 (line 84):
   $1 = token TOK_INT ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 31
Reading a token: --accepting rule at line 42 (" ")
--accepting rule at line 65 ("getc")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 74
Reducing stack by rule 25 (line 104):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 33
Reading a token: --accepting rule at line 42 (" ")
--accepting rule at line 73 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 76
Reading a token: --accepting rule at line 74 (")")
Next token is token ')' ()
Reducing stack by rule 23 (line 100):
   $1 = token '(' ()
-> $$ = nterm function_helper ()
Stack now 0 2 33
Entering state 77
Next token is token ')' ()
Shifting token ')' ()
Entering state 112
Reading a token: --accepting rule at line 75 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 137
Reducing stack by rule 20 (line 91):
   $1 = nterm identdecl ()
   $2 = nterm function_helper ()
   $3 = token ')' ()
   $4 = token ';' ()
-> $$ = nterm function ()
Stack now 0 2
Entering state 32
Reducing stack by rule 3 (line 59):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 43 ("
")
--accepting rule at line 50 ("string")
Next token is token TOK_STRING ()
Shifting token TOK_STRING ()
Entering state 9
Reducing stack by rule 17 (line 85):
   $1 = token TOK_STRING ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 31
Reading a token: --accepting rule at line 42 (" ")
--accepting rule at line 65 ("getw")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 74
Reducing stack by rule 25 (line 104):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 33
Reading a token: --accepting rule at line 42 (" ")
--accepting rule at line 73 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 76
Reading a token: --accepting rule at line 74 (")")
Next token is token ')' ()
Reducing stack by rule 23 (line 100):
   $1 = token '(' ()
-> $$ = nterm function_helper ()
Stack now 0 2 33
Entering state 77
Next token is token ')' ()
Shifting token ')' ()
Entering state 112
Reading a token: --accepting rule at line 75 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 137
Reducing stack by rule 20 (line 91):
   $1 = nterm identdecl ()
   $2 = nterm function_helper ()
   $3 = token ')' ()
   $4 = token ';' ()
-> $$ = nterm function ()
Stack now 0 2
Entering state 32
Reducing stack by rule 3 (line 59):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 43 ("
")
--accepting rule at line 50 ("string")
Next token is token TOK_STRING ()
Shifting token TOK_STRING ()
Entering state 9
Reducing stack by rule 17 (line 85):
   $1 = token TOK_STRING ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 31
Reading a token: --accepting rule at line 42 (" ")
--accepting rule at line 65 ("getln")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 74
Reducing stack by rule 25 (line 104):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 33
Reading a token: --accepting rule at line 42 (" ")
--accepting rule at line 73 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 76
Reading a token: --accepting rule at line 74 (")")
Next token is token ')' ()
Reducing stack by rule 23 (line 100):
   $1 = token '(' ()
-> $$ = nterm function_helper ()
Stack now 0 2 33
Entering state 77
Next token is token ')' ()
Shifting token ')' ()
Entering state 112
Reading a token: --accepting rule at line 75 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 137
Reducing stack by rule 20 (line 91):
   $1 = nterm identdecl ()
   $2 = nterm function_helper ()
   $3 = token ')' ()
   $4 = token ';' ()
-> $$ = nterm function ()
Stack now 0 2
Entering state 32
Reducing stack by rule 3 (line 59):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 43 ("
")
--accepting rule at line 50 ("string")
Next token is token TOK_STRING ()
Shifting token TOK_STRING ()
Entering state 9
Reducing stack by rule 17 (line 85):
   $1 = token TOK_STRING ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 31
Reading a token: --accepting rule at line 66 ("[]")
Next token is token TOK_ARRAY ()
Shifting token TOK_ARRAY ()
Entering state 73
Reading a token: --accepting rule at line 42 (" ")
--accepting rule at line 65 ("getargv")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 109
Reducing stack by rule 24 (line 102):
   $1 = nterm basetype ()
   $2 = token TOK_ARRAY ()
   $3 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 33
Reading a token: --accepting rule at line 42 (" ")
--accepting rule at line 73 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 76
Reading a token: --accepting rule at line 74 (")")
Next token is token ')' ()
Reducing stack by rule 23 (line 100):
   $1 = token '(' ()
-> $$ = nterm function_helper ()
Stack now 0 2 33
Entering state 77
Next token is token ')' ()
Shifting token ')' ()
Entering state 112
Reading a token: --accepting rule at line 75 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 137
Reducing stack by rule 20 (line 91):
   $1 = nterm identdecl ()
   $2 = nterm function_helper ()
   $3 = token ')' ()
   $4 = token ';' ()
-> $$ = nterm function ()
Stack now 0 2
Entering state 32
Reducing stack by rule 3 (line 59):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 43 ("
")
--accepting rule at line 46 ("void")
Next token is token TOK_VOID ()
Shifting token TOK_VOID ()
Entering state 5
Reducing stack by rule 13 (line 81):
   $1 = token TOK_VOID ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 31
Reading a token: --accepting rule at line 42 (" ")
--accepting rule at line 65 ("exit")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 74
Reducing stack by rule 25 (line 104):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 33
Reading a token: --accepting rule at line 42 (" ")
--accepting rule at line 73 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 76
Reading a token: --accepting rule at line 49 ("int")
Next token is token TOK_INT ()
Shifting token TOK_INT ()
Entering state 8
Reducing stack by rule 16 (line 84):
   $1 = token TOK_INT ()
-> $$ = nterm basetype ()
Stack now 0 2 33 76
Entering state 31
Reading a token: --accepting rule at line 42 (" ")
--accepting rule at line 65 ("status")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 74
Reducing stack by rule 25 (line 104):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2 33 76
Entering state 111
Reducing stack by rule 22 (line 98):
   $1 = token '(' ()
   $2 = nterm identdecl ()
-> $$ = nterm function_helper ()
Stack now 0 2 33
Entering state 77
Reading a token: --accepting rule at line 74 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 112
Reading a token: --accepting rule at line 75 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 137
Reducing stack by rule 20 (line 91):
   $1 = nterm identdecl ()
   $2 = nterm function_helper ()
   $3 = token ')' ()
   $4 = token ';' ()
-> $$ = nterm function ()
Stack now 0 2
Entering state 32
Reducing stack by rule 3 (line 59):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 43 ("
")
--accepting rule at line 41 ("# 4 "11-numbers.oc" 2")
--accepting rule at line 43 ("
")
--accepting rule at line 43 ("
")
--accepting rule at line 49 ("int")
Next token is token TOK_INT ()
Shifting token TOK_INT ()
Entering state 8
Reducing stack by rule 16 (line 84):
   $1 = token TOK_INT ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 31
Reading a token: --accepting rule at line 42 (" ")
--accepting rule at line 65 ("number")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 74
Reducing stack by rule 25 (line 104):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 33
Reading a token: --accepting rule at line 42 (" ")
--accepting rule at line 67 ("=")
Next token is token '=' ()
Shifting token '=' ()
Entering state 75
Reading a token: --accepting rule at line 42 (" ")
--accepting rule at line 64 ("1")
Next token is token TOK_INTCON ()
Shifting token TOK_INTCON ()
Entering state 17
Reducing stack by rule 76 (line 199):
   $1 = token TOK_INTCON ()
-> $$ = nterm constant ()
Stack now 0 2 33 75
Entering state 47
Reducing stack by rule 50 (line 151):
   $1 = nterm constant ()
-> $$ = nterm expr ()
Stack now 0 2 33 75
Entering state 110
Reading a token: --accepting rule at line 75 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 136
Reducing stack by rule 36 (line 123):
   $1 = nterm identdecl ()
   $2 = token '=' ()
   $3 = nterm expr ()
   $4 = token ';' ()
-> $$ = nterm vardecl ()
Stack now 0 2
Entering state 37
Reducing stack by rule 31 (line 117):
   $1 = nterm vardecl ()
-> $$ = nterm statement ()
Stack now 0 2
Entering state 36
Reducing stack by rule 4 (line 60):
   $1 = nterm program ()
   $2 = nterm statement ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 43 ("
")
--accepting rule at line 54 ("while")
Next token is token TOK_WHILE ()
Shifting token TOK_WHILE ()
Entering state 10
Reading a token: --accepting rule at line 42 (" ")
--accepting rule at line 73 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 50
Reading a token: --accepting rule at line 65 ("number")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 51
Reading a token: --accepting rule at line 42 (" ")
--accepting rule at line 86 (">")
Next token is token TOK_GT ()
Reducing stack by rule 73 (line 191):
   $1 = token TOK_IDENT ()
-> $$ = nterm variable ()
Stack now 0 2 10 50
Entering state 46
Reducing stack by rule 49 (line 150):
   $1 = nterm variable ()
-> $$ = nterm expr ()
Stack now 0 2 10 50
Entering state 95
Next token is token TOK_GT ()
Shifting token TOK_GT ()
Entering state 84
Reading a token: --accepting rule at line 42 (" ")
--accepting rule at line 64 ("0")
Next token is token TOK_INTCON ()
Shifting token TOK_INTCON ()
Entering state 17
Reducing stack by rule 76 (line 199):
   $1 = token TOK_INTCON ()
-> $$ = nterm constant ()
Stack now 0 2 10 50 95 84
Entering state 47
Reducing stack by rule 50 (line 151):
   $1 = nterm constant ()
-> $$ = nterm expr ()
Stack now 0 2 10 50 95 84
Entering state 118
Reading a token: --accepting rule at line 74 (")")
Next token is token ')' ()
Reducing stack by rule 56 (line 158):
   $1 = nterm expr ()
   $2 = token TOK_GT ()
   $3 = nterm expr ()
-> $$ = nterm binop ()
Stack now 0 2 10 50
Entering state 42
Reducing stack by rule 44 (line 145):
   $1 = nterm binop ()
-> $$ = nterm expr ()
Stack now 0 2 10 50
Entering state 95
Next token is token ')' ()
Shifting token ')' ()
Entering state 128
Reading a token: --accepting rule at line 42 (" ")
--accepting rule at line 78 ("{")
Next token is token '{' ()
Shifting token '{' ()
Entering state 27
Reading a token: --accepting rule at line 43 ("
")
--accepting rule at line 42 ("   ")
--accepting rule at line 65 ("puti")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 16
Reading a token: --accepting rule at line 42 (" ")
--accepting rule at line 73 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 55
Reading a token: --accepting rule at line 65 ("number")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 51
Reading a token: --accepting rule at line 74 (")")
Next token is token ')' ()
Reducing stack by rule 73 (line 191):
   $1 = token TOK_IDENT ()
-> $$ = nterm variable ()
Stack now 0 2 10 50 95 128 27 16 55
Entering state 46
Reducing stack by rule 49 (line 150):
   $1 = nterm variable ()
-> $$ = nterm expr ()
Stack now 0 2 10 50 95 128 27 16 55
Entering state 100
Next token is token ')' ()
Reducing stack by rule 43 (line 143):
   $1 = nterm expr ()
-> $$ = nterm exprs ()
Stack now 0 2 10 50 95 128 27 16 55
Entering state 99
Next token is token ')' ()
Shifting token ')' ()
Entering state 129
Reducing stack by rule 71 (line 184):
   $1 = token TOK_IDENT ()
   $2 = token '(' ()
   $3 = nterm exprs ()
   $4 = token ')' ()
-> $$ = nterm call ()
Stack now 0 2 10 50 95 128 27
Entering state 45
Reducing stack by rule 47 (line 148):
   $1 = nterm call ()
-> $$ = nterm expr ()
Stack now 0 2 10 50 95 128 27
Entering state 41
Reading a token: --accepting rule at line 75 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 94
Reducing stack by rule 35 (line 121):
   $1 = nterm expr ()
   $2 = token ';' ()
-> $$ = nterm statement ()
Stack now 0 2 10 50 95 128 27
Entering state 67
Reducing stack by rule 27 (line 110):
   $1 = token '{' ()
   $2 = nterm statement ()
-> $$ = nterm blockhead ()
Stack now 0 2 10 50 95 128
Entering state 34
Reading a token: --accepting rule at line 43 ("
")
--accepting rule at line 42 ("   ")
--accepting rule at line 65 ("putc")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 16
Reading a token: --accepting rule at line 42 (" ")
--accepting rule at line 73 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 55
Reading a token: --accepting rule at line 98 ("'\n'")
Next token is token TOK_CHARCON ()
Shifting token TOK_CHARCON ()
Entering state 18
Reducing stack by rule 77 (line 200):
   $1 = token TOK_CHARCON ()
-> $$ = nterm constant ()
Stack now 0 2 10 50 95 128 34 16 55
Entering state 47
Reducing stack by rule 50 (line 151):
   $1 = nterm constant ()
-> $$ = nterm expr ()
Stack now 0 2 10 50 95 128 34 16 55
Entering state 100
Reading a token: --accepting rule at line 74 (")")
Next token is token ')' ()
Reducing stack by rule 43 (line 143):
   $1 = nterm expr ()
-> $$ = nterm exprs ()
Stack now 0 2 10 50 95 128 34 16 55
Entering state 99
Next token is token ')' ()
Shifting token ')' ()
Entering state 129
Reducing stack by rule 71 (line 184):
   $1 = token TOK_IDENT ()
   $2 = token '(' ()
   $3 = nterm exprs ()
   $4 = token ')' ()
-> $$ = nterm call ()
Stack now 0 2 10 50 95 128 34
Entering state 45
Reducing stack by rule 47 (line 148):
   $1 = nterm call ()
-> $$ = nterm expr ()
Stack now 0 2 10 50 95 128 34
Entering state 41
Reading a token: --accepting rule at line 75 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 94
Reducing stack by rule 35 (line 121):
   $1 = nterm expr ()
   $2 = token ';' ()
-> $$ = nterm statement ()
Stack now 0 2 10 50 95 128 34
Entering state 79
Reducing stack by rule 26 (line 109):
   $1 = nterm blockhead ()
   $2 = nterm statement ()
-> $$ = nterm blockhead ()
Stack now 0 2 10 50 95 128
Entering state 34
Reading a token: --accepting rule at line 43 ("
")
--accepting rule at line 42 ("   ")
--accepting rule at line 65 ("number")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 16
Reading a token: --accepting rule at line 42 (" ")
--accepting rule at line 67 ("=")
Next token is token '=' ()
Reducing stack by rule 73 (line 191):
   $1 = token TOK_IDENT ()
-> $$ = nterm variable ()
Stack now 0 2 10 50 95 128 34
Entering state 46
Reducing stack by rule 49 (line 150):
   $1 = nterm variable ()
-> $$ = nterm expr ()
Stack now 0 2 10 50 95 128 34
Entering state 41
Next token is token '=' ()
Shifting token '=' ()
Entering state 86
Reading a token: --accepting rule at line 42 (" ")
--accepting rule at line 65 ("number")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 51
Reading a token: --accepting rule at line 42 (" ")
--accepting rule at line 68 ("+")
Next token is token '+' ()
Reducing stack by rule 73 (line 191):
   $1 = token TOK_IDENT ()
-> $$ = nterm variable ()
Stack now 0 2 10 50 95 128 34 41 86
Entering state 46
Reducing stack by rule 49 (line 150):
   $1 = nterm variable ()
-> $$ = nterm expr ()
Stack now 0 2 10 50 95 128 34 41 86
Entering state 120
Next token is token '+' ()
Shifting token '+' ()
Entering state 87
Reading a token: --accepting rule at line 42 (" ")
--accepting rule at line 65 ("number")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 51
Reading a token: --accepting rule at line 75 (";")
Next token is token ';' ()
Reducing stack by rule 73 (line 191):
   $1 = token TOK_IDENT ()
-> $$ = nterm variable ()
Stack now 0 2 10 50 95 128 34 41 86 120 87
Entering state 46
Reducing stack by rule 49 (line 150):
   $1 = nterm variable ()
-> $$ = nterm expr ()
Stack now 0 2 10 50 95 128 34 41 86 120 87
Entering state 121
Next token is token ';' ()
Reducing stack by rule 58 (line 160):
   $1 = nterm expr ()
   $2 = token '+' ()
   $3 = nterm expr ()
-> $$ = nterm binop ()
Stack now 0 2 10 50 95 128 34 41 86
Entering state 42
Reducing stack by rule 44 (line 145):
   $1 = nterm binop ()
-> $$ = nterm expr ()
Stack now 0 2 10 50 95 128 34 41 86
Entering state 120
Next token is token ';' ()
Reducing stack by rule 51 (line 153):
   $1 = nterm expr ()
   $2 = token '=' ()
   $3 = nterm expr ()
-> $$ = nterm binop ()
Stack now 0 2 10 50 95 128 34
Entering state 42
Reducing stack by rule 44 (line 145):
   $1 = nterm binop ()
-> $$ = nterm expr ()
Stack now 0 2 10 50 95 128 34
Entering state 41
Next token is token ';' ()
Shifting token ';' ()
Entering state 94
Reducing stack by rule 35 (line 121):
   $1 = nterm expr ()
   $2 = token ';' ()
-> $$ = nterm statement ()
Stack now 0 2 10 50 95 128 34
Entering state 79
Reducing stack by rule 26 (line 109):
   $1 = nterm blockhead ()
   $2 = nterm statement ()
-> $$ = nterm blockhead ()
Stack now 0 2 10 50 95 128
Entering state 34
Reading a token: --accepting rule at line 43 ("
")
--accepting rule at line 79 ("}")
Next token is token '}' ()
Shifting token '}' ()
Entering state 78
Reducing stack by rule 28 (line 113):
   $1 = nterm blockhead ()
   $2 = token '}' ()
-> $$ = nterm block ()
Stack now 0 2 10 50 95 128
Entering state 35
Reducing stack by rule 30 (line 116):
   $1 = nterm block ()
-> $$ = nterm statement ()
Stack now 0 2 10 50 95 128
Entering state 141
Reducing stack by rule 37 (line 127):
   $1 = token TOK_WHILE ()
   $2 = token '(' ()
   $3 = nterm expr ()
   $4 = token ')' ()
   $5 = nterm statement ()
-> $$ = nterm while ()
Stack now 0 2
Entering state 38
Reducing stack by rule 32 (line 118):
   $1 = nterm while ()
-> $$ = nterm statement ()
Stack now 0 2
Entering state 36
Reducing stack by rule 4 (line 60):
   $1 = nterm program ()
   $2 = nterm statement ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 43 ("
")
--accepting rule at line 65 ("puti")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 16
Reading a token: --accepting rule at line 42 (" ")
--accepting rule at line 73 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 55
Reading a token: --accepting rule at line 65 ("number")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 51
Reading a token: --accepting rule at line 74 (")")
Next token is token ')' ()
Reducing stack by rule 73 (line 191):
   $1 = token TOK_IDENT ()
-> $$ = nterm variable ()
Stack now 0 2 16 55
Entering state 46
Reducing stack by rule 49 (line 150):
   $1 = nterm variable ()
-> $$ = nterm expr ()
Stack now 0 2 16 55
Entering state 100
Next token is token ')' ()
Reducing stack by rule 43 (line 143):
   $1 = nterm expr ()
-> $$ = nterm exprs ()
Stack now 0 2 16 55
Entering state 99
Next token is token ')' ()
Shifting token ')' ()
Entering state 129
Reducing stack by rule 71 (line 184):
   $1 = token TOK_IDENT ()
   $2 = token '(' ()
   $3 = nterm exprs ()
   $4 = token ')' ()
-> $$ = nterm call ()
Stack now 0 2
Entering state 45
Reducing stack by rule 47 (line 148):
   $1 = nterm call ()
-> $$ = nterm expr ()
Stack now 0 2
Entering state 41
Reading a token: --accepting rule at line 75 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 94
Reducing stack by rule 35 (line 121):
   $1 = nterm expr ()
   $2 = token ';' ()
-> $$ = nterm statement ()
Stack now 0 2
Entering state 36
Reducing stack by rule 4 (line 60):
   $1 = nterm program ()
   $2 = nterm statement ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 43 ("
")
--accepting rule at line 65 ("putc")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 16
Reading a token: --accepting rule at line 42 (" ")
--accepting rule at line 73 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 55
Reading a token: --accepting rule at line 98 ("'\n'")
Next token is token TOK_CHARCON ()
Shifting token TOK_CHARCON ()
Entering state 18
Reducing stack by rule 77 (line 200):
   $1 = token TOK_CHARCON ()
-> $$ = nterm constant ()
Stack now 0 2 16 55
Entering state 47
Reducing stack by rule 50 (line 151):
   $1 = nterm constant ()
-> $$ = nterm expr ()
Stack now 0 2 16 55
Entering state 100
Reading a token: --accepting rule at line 74 (")")
Next token is token ')' ()
Reducing stack by rule 43 (line 143):
   $1 = nterm expr ()
-> $$ = nterm exprs ()
Stack now 0 2 16 55
Entering state 99
Next token is token ')' ()
Shifting token ')' ()
Entering state 129
Reducing stack by rule 71 (line 184):
   $1 = token TOK_IDENT ()
   $2 = token '(' ()
   $3 = nterm exprs ()
   $4 = token ')' ()
-> $$ = nterm call ()
Stack now 0 2
Entering state 45
Reducing stack by rule 47 (line 148):
   $1 = nterm call ()
-> $$ = nterm expr ()
Stack now 0 2
Entering state 41
Reading a token: --accepting rule at line 75 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 94
Reducing stack by rule 35 (line 121):
   $1 = nterm expr ()
   $2 = token ';' ()
-> $$ = nterm statement ()
Stack now 0 2
Entering state 36
Reducing stack by rule 4 (line 60):
   $1 = nterm program ()
   $2 = nterm statement ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 43 ("
")
--(end of buffer or a NUL)
--EOF (start condition 0)
Now at end of input.
Reducing stack by rule 1 (line 55):
   $1 = nterm program ()
-> $$ = nterm start ()
Stack now 0
Entering state 1
Now at end of input.
Shifting token $end ()
Entering state 3
Stack now 0 1 3
Cleanup: popping token $end ()
Cleanup: popping nterm start ()
